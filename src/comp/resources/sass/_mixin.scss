//bullet list
@mixin bl-list($color:color(black,3),$font-size:11px,$line-height:13px,$padding-left:6px,$background-position:0 5px,$margin-top:5px){
	> li{
		@include bullet($color,$font-size,$line-height,$padding-left,$background-position);
		& ~ li{
			margin-top:$margin-top;
		}
	}
}
//single bullet
@mixin bullet($color:color(black,3),$font-size:11px,$line-height:13px,$padding-left:6px,$background-position:0 5px){
	$c : str-slice(#{$color}, 2);
	padding-left:$padding-left;
	background:url(#{$img-url}/common/bul_2x2_#{$c}.gif) $background-position no-repeat;
	font-size:$font-size;
	line-height:$line-height;
	color:$color;
}

//whidden-text-block
@mixin whidden-text-block($inline-block:inline-block){
	overflow:hidden;
	text-indent:-999px;
	display:$inline-block;
}

//winline
@mixin winline{
	position:relative;
	line-height:0;
	font-size:0;
}

//wpseudo-element - 가상선택자 이미지 삽입
@mixin wpseudo-element($img, $pseudo:before, $position:relative, $display:block) {
	position:$position;
	&:#{$pseudo}{
		display:$display;
		content: '';
		@include sprite($img);
	}
}

//wborder-radius
@mixin wborder-radius($radius-tl:null, $radius-tr:null, $radius-bl:null, $radius-br:null){
	border-top-left-radius:$radius-tl;
	border-top-right-radius:$radius-tr;
	border-bottom-left-radius:$radius-bl;
	border-bottom-right-radius:$radius-br;
}


//wbullet - 리스트형
@mixin wbullet-list($color:color(black,3), $top:5px, $padding:6px, $margin-top:5px, $size:2px, $direction:'left'){
	> li{
		@include wbullet($direction, $top, $padding, $size, $background-color:$color, $border-radius:null);
		color:$color;
		~ li{
			margin-top:$margin-top;
		}
	}
}

//swiper 상위
@mixin swiper($width:100%){
	display:-webkit-box;
	display:-webkit-flex;
	display:flex;
	> *{
		width:$width;
		-webkit-flex-shrink:0;
		flex-shrink:0;
	}
}


//position property
@mixin position($position, $top: null, $right: null, $bottom: null, $left: null) {
	position: $position;
	top: $top;
	right: $right;
	bottom: $bottom;
	left: $left;
}

@mixin fixed($args...){
	@include position(fixed, $args...);
}

@mixin absolute($args...){
	@include position(absolute, $args...);
}

@mixin posrt($right: 0, $top: 0){
	@include absolute($right: $right, $top: $top);
}

@mixin poslt($left: 0, $top: 0){
	@include absolute($left: $left, $top: $top);
}

@mixin posrb($right: 0, $bottom: 0){
	@include absolute($right: $right, $bottom: $bottom);
}

@mixin poslb($left: 0, $bottom: 0){
	@include absolute($left: $left, $bottom: $bottom);
}

//box-size model
@mixin size($width, $height: $width) {
	width: $width;
	height: $height;
}

//font-size
@mixin font($size, $line-height){
	font-size: $size;
	line-height: $line-height;
}

//height
@mixin vt-m($height, $line-height:$height){
	height: $height;
	line-height: $line-height;
}

//border
@mixin bd($bd-color: $bd-basic-color, $bd-width:1px , $bd-style:solid){
	@if length($bd-width) > 1 or length($bd-color) > 1 {
		border-style: $bd-style;
		border-color: $bd-color;
		border-width: $bd-width;
	} @else {
		border: $bd-width $bd-style $bd-color;
	}
}

@mixin transition($transition...){
	-webkit-transition:$transition;
	transition:$transition;
}

@mixin ellipsis($lines: 1, $line-height:null){
	overflow: hidden;
	text-overflow: ellipsis;
	@if ($lines > 1){
		-webkit-box-orient: vertical;
		-webkit-line-clamp: $lines;
		display: -webkit-box;
		@if ($line-height!=null){
			height: $line-height * $lines;
		}
	} @else {
		white-space: nowrap;
	}
}

@mixin opacity-bg($alpha:null, $rgb:color(black,0)){
	$rgba: rgba($rgb, $alpha);
	background: $rgba;
}

@mixin get-list($map, $keys...){
	$i: 1;
	$length: length($keys);
	@while $length >= $i{
		$map: map-get($map, nth($keys, $i));
		$i: $i + 1;
	}
	@each $property, $value in $map {
		@if type-of($value) != map {
			#{$property}: $value;
		}
	}
}

@mixin get-nested-list($map, $tag:null, $tag-property:null){
	@if $tag-property != null{
		@each $property , $value in $map {
			&.#{$property}{
				#{$tag}{
					#{$tag-property}:$value;
				}
			}
		}
	} @else if $tag != null and $tag-property == null {
		@each $property , $value in $map {
			&.#{$property}{
				#{$tag}{
					@include get-list($map , $property);
				}
			}
		}
	} @else if $tag == null and $tag-property == null{
		@each $property , $value in $map {
			&.#{$property}{
				@include get-list($map , $property);
			}
		}
	}
}

@mixin sprite-width($sprite) {
	width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
	height: nth($sprite, 6);
}

@mixin sprite-size($sprite) {
	width: nth($sprite, 5);
	height: nth($sprite, 6);
}

@mixin sprite-position($sprite,$ipt:null) {
	$sprite-offset-x: nth($sprite, 3);
	$sprite-offset-y: nth($sprite, 4);
	background-position: $sprite-offset-x  $sprite-offset-y $ipt;
}

@mixin sprite-image($sprite) {
	$sprite-image: nth($sprite, 9);
	background-image: url(../spr/#{$sprite-image});
	background-repeat:no-repeat;
}

@mixin sprite($sprite,$ipt:null) {
	@include sprite-position($sprite,$ipt);
	@include sprite-width($sprite);
	@include sprite-height($sprite);
}
